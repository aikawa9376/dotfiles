!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/41311ac/
#	.vimrc	/^nnoremap # #zz$/;"	m
(	.vimrc	/^nnoremap ( (zz$/;"	m
)	.vimrc	/^nnoremap ) )zz$/;"	m
*	.vimrc	/^nnoremap * *zz$/;"	m
<	.vimrc	/^vnoremap < <gv$/;"	m
<C-Space>	.vimrc	/^imap <C-Space> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-Space>	.vimrc	/^smap <C-Space> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-Space>	.vimrc	/^xmap <C-Space> <Plug>(neosnippet_expand_target)$/;"	m
<C-]>	.vimrc	/^nnoremap <silent> <C-]> :call fzf#vim#tags(expand('<cword>'))<CR><CR>$/;"	m
<C-_>	.vimrc	/^nmap <C-_> <Plug>(caw:hatpos:toggle)$/;"	m
<C-_>	.vimrc	/^vmap <C-_> <Plug>(caw:hatpos:toggle)$/;"	m
<C-a>	.vimrc	/^inoremap <C-a> <C-o>^$/;"	m
<C-b>	.vimrc	/^inoremap <C-b> <Left>$/;"	m
<C-d>	.vimrc	/^inoremap <C-d> <Del>$/;"	m
<C-d>	.vimrc	/^nnoremap <C-d> <C-d>zz$/;"	m
<C-e>	.vimrc	/^inoremap <C-e> <C-o>$<Right>$/;"	m
<C-f>	.vimrc	/^inoremap <C-f> <Right>$/;"	m
<C-h>	.vimrc	/^inoremap <C-h> <BS>$/;"	m
<C-h>	.vimrc	/^nnoremap <C-h> ^$/;"	m
<C-i>	.vimrc	/^nnoremap <C-i> <C-i>zz$/;"	m
<C-k>	.vimrc	/^inoremap <C-k> <C-o>D<Right>$/;"	m
<C-l>	.vimrc	/^nnoremap <C-l> \$$/;"	m
<C-n>	.vimrc	/^inoremap <C-n> <Down>$/;"	m
<C-o>	.vimrc	/^nnoremap <C-o> <C-o>zz$/;"	m
<C-p>	.vimrc	/^inoremap <C-p> <Up>$/;"	m
<C-u>	.vimrc	/^inoremap <C-u> <C-o>d^$/;"	m
<C-u>	.vimrc	/^nnoremap <C-u> <C-u>zz$/;"	m
<C-w>	.vimrc	/^inoremap <C-w> <C-o>db$/;"	m
<CR>	.vimrc	/^nnoremap <CR> i<CR><Esc>$/;"	m
<ESC>h	.vimrc	/^nmap <silent> <ESC>h :bprevious<CR>$/;"	m
<ESC>j	.vimrc	/^nmap <silent> <ESC>j :b#<CR>$/;"	m
<ESC>l	.vimrc	/^nmap <silent> <ESC>l :bnext<CR>$/;"	m
<Esc><Esc>	.vimrc	/^nmap <silent> <Esc><Esc> :nohlsearch<CR>$/;"	m
<M-d>	.vimrc	/^nnoremap <M-d> mzo<ESC>`zj$/;"	m
<M-u>	.vimrc	/^nnoremap <M-u> mzO<ESC>`zk$/;"	m
<NUL>	.vimrc	/^  map <NUL> <C-Space>$/;"	m
<NUL>	.vimrc	/^  map! <NUL> <C-Space>$/;"	m
<Space>	.vimrc	/^map <Space> <Nop>$/;"	m
<Space>,	.vimrc	/^nnoremap <Space>, :<c-u>w<CR>:<c-u>source ~\/.vimrc<CR>$/;"	m
<Space>.	.vimrc	/^nnoremap <silent> <Space>. :<c-u>e ~\/.vimrc<CR>$/;"	m
<Space>A	.vimrc	/^nnoremap <silent> <Space>A :Rag<CR>$/;"	m
<Space>F	.vimrc	/^nnoremap <silent> <Space>F :Files<CR>$/;"	m
<Space>a	.vimrc	/^nnoremap <silent> <Space>a :Ag<CR>$/;"	m
<Space>b	.vimrc	/^nnoremap <silent> <Space>b :Buffers<CR>$/;"	m
<Space>d	.vimrc	/^nmap <silent> <Space>d :Gdiff<CR>$/;"	m
<Space>e	.vimrc	/^nnoremap <silent> <Space>e :History<CR>$/;"	m
<Space>f	.vimrc	/^nnoremap <silent> <Space>f :ProjectFiles<CR>$/;"	m
<Space>g	.vimrc	/^nmap <Space>g :call fugitive#detect(@%)<CR>$/;"	m
<Space>h	.vimrc	/^nmap <silent> <Space>h :Gblame<CR>$/;"	m
<Space>i	.vimrc	/^nnoremap <Space>i gg=G$/;"	m
<Space>l	.vimrc	/^nnoremap <silent> <Space>l :Lines<CR>$/;"	m
<Space>n	.vimrc	/^nnoremap <silent> <Space>n :NERDTreeToggle<CR>$/;"	m
<Space>o	.vimrc	/^nnoremap <silent> <Space>o :TlistToggle<CR>$/;"	m
<Space>p	.vimrc	/^nnoremap <Space>p "0p$/;"	m
<Space>q	.vimrc	/^nmap <silent> <Space>q :AutoSaveToggle<CR>$/;"	m
<Space>r	.vimrc	/^nmap <silent> <Space>r :Gremove<CR>$/;"	m
<Space>s	.vimrc	/^nmap <silent> <Space>s :Gstatus<CR>$/;"	m
<Space>v	.vimrc	/^nmap <Space>v <C-v>$/;"	m
<Space>w	.vimrc	/^map <Space>w :<c-u>w<CR>$/;"	m
<Space>x	.vimrc	/^map <Space>x :<c-u>bd<CR>$/;"	m
<Tab>	.vimrc	/^imap <silent> <Tab> <C-y>,$/;"	m
<Tab>	.vimrc	/^nnoremap <Tab> %$/;"	m
<Tab>	.vimrc	/^vnoremap <Tab> %$/;"	m
<Tab>H	.vimrc	/^nmap <silent> <Tab>H :-tabmove<CR>$/;"	m
<Tab>L	.vimrc	/^nmap <silent> <Tab>L :+tabmove<CR>$/;"	m
<Tab>c	.vimrc	/^nmap <silent> <Tab>c :close<CR>$/;"	m
<Tab>h	.vimrc	/^nmap <silent> <Tab>h gT$/;"	m
<Tab>l	.vimrc	/^nmap <silent> <Tab>l gt$/;"	m
<Tab>x	.vimrc	/^nmap <silent> <Tab>x :close<CR>$/;"	m
>	.vimrc	/^vnoremap > >gv$/;"	m
Ag	.vimrc	/^command! -bang -nargs=* Ag$/;"	c
Debug	.vimrc	/^      \\   Debug$/;"	c
Files	.vimrc	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Multiple_cursors_after	.vimrc	/^function! Multiple_cursors_after()$/;"	f
Multiple_cursors_before	.vimrc	/^function! Multiple_cursors_before()$/;"	f
N	.vimrc	/^nnoremap N Nzz$/;"	m
ProjectFiles	.vimrc	/^command! ProjectFiles execute 'Files' s:find_git_root()$/;"	c
Rag	.vimrc	/^command! -nargs=* Rag$/;"	c
b:context_filetype_filetypes	.vimrc	/^let b:context_filetype_filetypes = context_filetype#default_filetypes()$/;"	v
b:match_words	.vimrc	/^let b:match_words = "if:endif,foreach:endforeach,\\<begin\\>:\\<end\\>"$/;"	v
bg	.tmux.conf	/^set -g window-active-style 'bg=colour0'$/;"	k
bg	.tmux.conf	/^set -g window-style 'bg=colour234'$/;"	k
ctags	.vimrc	/^augroup ctags$/;"	a
g#	.vimrc	/^nnoremap g# g#zz$/;"	m
g*	.vimrc	/^nnoremap g* g*zz$/;"	m
g,	.vimrc	/^nnoremap g, g,zz$/;"	m
g:EasyMotion_do_mapping	.vimrc	/^let g:EasyMotion_do_mapping = 0 $/;"	v
g:EasyMotion_smartcase	.vimrc	/^let g:EasyMotion_smartcase = 1$/;"	v
g:Powerline_symbols	.vimrc	/^let g:Powerline_symbols = 'fancy'$/;"	v
g:airline#extensions#ale#enabled	.vimrc	/^let g:airline#extensions#ale#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	.vimrc	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#fnamemod	.vimrc	/^let g:airline#extensions#tabline#fnamemod = ':t'$/;"	v
g:airline#extensions#whitespace#enabled	.vimrc	/^let g:airline#extensions#whitespace#enabled = 0$/;"	v
g:airline_detect_whitespace	.vimrc	/^let g:airline_detect_whitespace=0$/;"	v
g:airline_enable_branch	.vimrc	/^let g:airline_enable_branch = 1$/;"	v
g:airline_left_alt_sep	.vimrc	/^let g:airline_left_alt_sep = '‚ÆÅ'$/;"	v
g:airline_left_sep	.vimrc	/^let g:airline_left_sep = '‚ÆÄ'$/;"	v
g:airline_powerline_fonts	.vimrc	/^let g:airline_powerline_fonts = 1 $/;"	v
g:airline_right_alt_sep	.vimrc	/^let g:airline_right_alt_sep = '‚ÆÉ'$/;"	v
g:airline_right_sep	.vimrc	/^let g:airline_right_sep = '‚ÆÇ'$/;"	v
g:airline_symbols	.vimrc	/^  let g:airline_symbols = {}$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.branch = '‚éá'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.branch = '‚≠†'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.crypt = 'üîí'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.linenr = '‚ò∞'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.maxlinenr = '„èë'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.notexists = '…Ü'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.paste = 'œÅ'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.readonly = '‚≠§'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.spell = 'Íû®'$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.whitespace = 'Œû'$/;"	v
g:airline_theme	.vimrc	/^let g:airline_theme = 'minimalist'$/;"	v
g:ale_fix_on_save	.vimrc	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers = {}$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['css'] = ['prettier']$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['html'] = ['prettier']$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['javascript'] = ['prettier-eslint']$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['php'] = ['prettier']$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['phtml'] = ['prettier']$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers['scss'] = ['prettier']$/;"	v
g:ale_javascript_prettier_use_local_config	.vimrc	/^let g:ale_javascript_prettier_use_local_config = 1$/;"	v
g:ale_lint_on_text_changed	.vimrc	/^let g:ale_lint_on_text_changed = 0$/;"	v
g:ale_linters	.vimrc	/^let g:ale_linters = {}$/;"	v
g:ale_php_phan_executable	.vimrc	/^let g:ale_php_phan_executable = 'vendor\/bin\/phan'$/;"	v
g:auto_save	.vimrc	/^let g:auto_save = 1 " auto save enable$/;"	v
g:auto_save_silent	.vimrc	/^let g:auto_save_silent = 1 " silent auto save$/;"	v
g:context_filetype#same_filetypes	.vimrc	/^  let g:context_filetype#same_filetypes = {}$/;"	v
g:context_filetype#same_filetypes	.vimrc	/^let g:context_filetype#same_filetypes.html = 'php'$/;"	v
g:context_filetype#same_filetypes	.vimrc	/^let g:context_filetype#same_filetypes.php = 'html'$/;"	v
g:context_filetype#same_filetypes	.vimrc	/^let g:context_filetype#same_filetypes.php = 'phtml'$/;"	v
g:deoplete#auto_complete_delay	.vimrc	/^let g:deoplete#auto_complete_delay = 0$/;"	v
g:deoplete#auto_complete_start_length	.vimrc	/^let g:deoplete#auto_complete_start_length = 1$/;"	v
g:deoplete#enable_at_startup	.vimrc	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_camel_case	.vimrc	/^let g:deoplete#enable_camel_case = 0$/;"	v
g:deoplete#enable_ignore_case	.vimrc	/^let g:deoplete#enable_ignore_case = 0$/;"	v
g:deoplete#enable_refresh_always	.vimrc	/^let g:deoplete#enable_refresh_always = 0$/;"	v
g:deoplete#enable_smart_case	.vimrc	/^let g:deoplete#enable_smart_case = 1$/;"	v
g:deoplete#file#enable_buffer_path	.vimrc	/^let g:deoplete#file#enable_buffer_path = 1$/;"	v
g:deoplete#max_list	.vimrc	/^let g:deoplete#max_list = 100$/;"	v
g:deoplete#sources#padawan#add_parentheses	.vimrc	/^let g:deoplete#sources#padawan#add_parentheses = 1$/;"	v
g:deoplete#sources#padawan#server_autostart	.vimrc	/^let g:deoplete#sources#padawan#server_autostart = 1$/;"	v
g:fzf_buffers_jump	.vimrc	/^let g:fzf_buffers_jump = 1$/;"	v
g:user_emmet_install_global	.vimrc	/^let g:user_emmet_install_global = 0$/;"	v
g;	.vimrc	/^nnoremap g; g;zz$/;"	m
j	.vimrc	/^nnoremap j gj$/;"	m
jj	.vimrc	/^inoremap <silent> jj <Esc>$/;"	m
js	config.ctags	/^--langdef=js$/;"	l
k	.vimrc	/^nnoremap k gk$/;"	m
m	.vimrc	/^nmap m <Plug>(easymotion-s2)$/;"	m
n	.vimrc	/^nnoremap n nzz$/;"	m
s	.vimrc	/^nnoremap s "_s$/;"	m
s	.vimrc	/^vnoremap s "_s$/;"	m
s:execute_ctags	.vimrc	/^function! s:execute_ctags() abort$/;"	f
s:find_git_root	.vimrc	/^function! s:find_git_root()$/;"	f
s:use_meta_keys	.vimrc	/^  function! s:use_meta_keys()  " {{{$/;"	f
s:with_git_root	.vimrc	/^function! s:with_git_root()$/;"	f
t	.tmux.conf	/^bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode/;"	k
vimrcEx	.vimrc	/^augroup vimrcEx$/;"	a
x	.vimrc	/^nnoremap x "_x$/;"	m
x	.vimrc	/^vnoremap x "_x$/;"	m
xterm	.tmux.conf	/^set -g terminal-overrides 'xterm:colors=256'$/;"	k
{	.vimrc	/^nnoremap { {zz$/;"	m
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*(true|false)/\\5/,boolean	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*.+([,;=]|$)/\\5/,variable	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*[0-9]+/\\5/,number	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*[^"]'[^']*/\\5/,string	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*\\[/\\5/,array	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*\\{/\\5/,object	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*=[ \\t]*function[ \\t]*\\(/\\5/,function	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\t]*[ \\t]*([,;]|$)/\\5/,variable	config.ctags	/^--regex-js=\/(,|(;|^)[ \\t]*(var|let|([A-Za-z_$][A-Za-z0-9_$.]+\\.)*))[ \\t]*([A-Za-z0-9_$]+)[ \\/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*(true|false)/\\2/,boolean	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*(true|false)\/\\2\/,boolean\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[0-9]+/\\2/,number	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[0-9]+\/\\2\/,number\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[^"]'[^']*/\\2/,string	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[^"]'[^']*\/\\2\/,string\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[^=]+([,;]|$)/\\2/,variable	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[^=]+([,;]|$)\/\\2\/,variable\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*\\[/\\2/,array	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*\\[\/\\2\/,array\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*\\{/\\2/,object	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*\\{\/\\2\/,object\/$/;"	k	langdef:js
|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*function[ \\t]*\\(/\\2/,function	config.ctags	/^--regex-js=\/(,|^)[ \\t]*([A-Za-z_$][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*function[ \\t]*\\(\/\\2\/,func/;"	k	langdef:js
}	.vimrc	/^nnoremap } }zz$/;"	m
